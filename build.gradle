plugins {
    id 'java'
    id 'net.ltgt.apt-idea' version '0.21'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id "nebula.integtest" version "7.0.9"
}

group 'myprojects'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

ext {
    autovalueVersion = "1.7.4"
    jacksonVersion = "2.11.3"
    guavaVersion = "29.0-jre"
    openapiVersion = "1.4.8"
    mockitoVersion = "3.5.13"
    junitVersion = "5.7.0"
    jjwtVersion = "0.11.2"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.google.guava:guava:$guavaVersion"

    implementation "org.springdoc:springdoc-openapi:$openapiVersion"
    implementation "org.springdoc:springdoc-openapi-ui:$openapiVersion"

    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    implementation "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    runtimeOnly "com.h2database:h2"
    runtimeOnly 'org.postgresql:postgresql'

    testCompile "org.mockito:mockito-junit-jupiter:$mockitoVersion"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompile("org.springframework.security:spring-security-test")

    annotationProcessor "com.google.auto.value:auto-value:$autovalueVersion"
    compile "com.google.auto.value:auto-value-annotations:$autovalueVersion"
}

test {
    useJUnitPlatform ()
}

integrationTest {
    useJUnitPlatform()
}

bootJar {
    launchScript()
}
